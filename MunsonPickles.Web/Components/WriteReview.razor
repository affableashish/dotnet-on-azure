@inject IJSRuntime Js
@inject ReviewService ReviewService
@attribute [RenderModeServer]

<div class="modal fade" id="reviewModal" tabindex="-1" role="dialog" aria-hidden="true" aria-modal="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="modalTitleLabel">What did you think about @Product?.Name</h4>   
                <button type="button" class="close" data-dismiss="modal" aria-lable="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">                                
                <textarea class="form-control" rows="10" 
                placeholder="Leave us a review, we'll ❤️ it and we'll ❤️ you!"
                @bind="_reviewText" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-light" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" @onclick="@SaveReview">Save</button>
            </div>
        </div>        
    </div>
</div>

@code {
    [Parameter]
    public Product? Product { get; set; }

    string _reviewText = string.Empty;

    async Task SaveReview()
    {
        await ReviewService.AddReview(_reviewText, Product.Id);

        // we'll just assume everything worked out great and close the modal

        _reviewText = string.Empty;

        await Js.InvokeVoidAsync("hideModal", "reviewModal");
    }
}